name: Daily Standup

on:
  schedule:
    # Runs every weekday (Monday to Friday) at 9 AM UTC
    - cron: '0 6 * * 1-5'
  workflow_dispatch: # Allows manual triggering

jobs:
  send-standup-prompt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Use the latest version compatible with Node 20

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Message Users Individually
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          USERS=("U066LTEPJF7") # List of Slack users
          for USER in "${USERS[@]}"; do
            # Send message to each user
            RESPONSE=$(curl -s -X POST https://slack.com/api/chat.postMessage \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-type: application/json" \
              --data "{\"channel\":\"@$USER\", \"text\":\"Good morning! It's time for your daily standup.\n\nYesterday Tasks:\nToday Tasks:\nAny Impediments!\"}")

            # Extract timestamp for the message thread
            THREAD_TS=$(echo $RESPONSE | jq -r '.ts')
            
            # Store responses (you may store them in a file or pass them as outputs)
            echo "::set-output name=thread_ts_${USER}::$THREAD_TS"
          done

      - name: Collect and Post Responses to Thread
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          USERS=("U066LTEPJF7") # Same list of users
          for USER in "${USERS[@]}"; do
            THREAD_TS=$(echo "${{ steps.send-standup-prompt.outputs.thread_ts_${USER} }}")
            # Append each user's response to the standup thread in Slack
            curl -s -X POST https://slack.com/api/chat.postMessage \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-type: application/json" \
              --data "{\"channel\":\"#stand-up-meeting\", \"text\":\"@$USER's standup response has been collected.\", \"thread_ts\":\"$THREAD_TS\"}"
          done
